// ุงุณุชุฏุนุงุก ููุชุจุฉ ุฅูุณุจุฑูุณ ูุชุดุบูู ุงูุณูุฑูุฑ
const express = require('express');
// ุงุณุชุฏุนุงุก ููุชุจุฉ Mongoose ุนูุดุงู ูุฑุจุท ูุน MongoDB
const mongoose = require('mongoose');
// ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ ูู ููู .env
require('dotenv').config();

const userRoutes = require('./routes/userRoute');
const courseRoutes = require('./routes/courseRoutes');
const videoRoutes = require('./routes/videoRoutes');
const subscriptionRoutes = require('./routes/subscriptionRoutes');
const notificationRoutes = require('./routes/notificationRoutes');
const errorMiddleware = require('./middleware/errorHandler');
const adminRoutes = require('./routes/adminRoutes');
const playerRoutes = require('./routes/playerRoutes');
const settingsRoutes = require('./routes/settingsRoutes');
const materialRoutes = require('./routes/materialRoutes');
 // โ ุฅุถุงูุฉ ุงุณุชุฏุนุงุก materialRoutes

// ุฅูุดุงุก ุงูุฃุจููููุดู ููุณู ูู express
const app = express();

// ูุญุชุงุฌ ุฏู ุนูุดุงู ููุฏุฑ ูุณุชูุจู ุฏุงุชุง ุจุตูุบุฉ JSON ูู ุงูุจูุณุช ุฑูููุณุช
app.use(express.json());

// โ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช MongoDB
const connectDB = async () => {
    try {
        await mongoose.connect(process.env.MONGO_URI, {
            serverSelectionTimeoutMS: 5000, // ูู ุงูุณูุฑูุฑ ูุฃุฎุฏุด ุฑุฏ ุฎูุงู 5 ุซูุงูู ูููู
            family: 4 // ูุฌุจุฑ ุงูุงุชุตุงู ูุณุชุฎุฏู IPv4 ุจุฏู IPv6
        });

        console.log("โ MongoDB Connected Successfully!");
    } catch (error) {
        console.error("โ MongoDB Connection Error:", error);
        process.exit(1); // ูููู ุงูุณูุฑูุฑ ูู ุญุตู ุฎุทุฃ
    }
};

// ุชูููุฐ ุงููููุดู ุงููู ุจุชุฑุจุท ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
connectDB();

// โ๏ธููุง ููุถูู ุจุนุฏูู ุงูุฑุงูุชุณ
app.use('/api/users', userRoutes);
app.use('/api/courses', courseRoutes);
app.use('/api/videos', videoRoutes);
app.use('/api/subscriptions', subscriptionRoutes);
app.use('/api/notifications', notificationRoutes);
app.use('/api/admin', adminRoutes);
app.use('/api/materials', materialRoutes); // โ ุชู ุฅุถุงูุฉ ุงููุณุงุฑ
app.use('/api/player', playerRoutes);
app.use('/api/settings', settingsRoutes);

// Error Handling Middleware
app.use(errorMiddleware);

// โ ุชุดุบูู ุงูุณูุฑูุฑ
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
    console.log(`๐ Server is running on http://localhost:${PORT}`);
});

//Eng-Amglous Rezq
// ๐๏ธ ูุฒููุฑ 27:1 ๐๏ธ
// "ูฑูุฑููุจูู ูููุฑูู ููุฎูููุงุตููุ ููููููู ุฃูุฎูุงููุ ูฑูุฑููุจูู ุญูุตููู ุญูููุงุชููุ ููููููู ุฃูุฑูุชูุนูุจูุ"
